{
	"id": "de7d3293d85f5f4c46c134f54471d25c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StructDemo.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract StructDemo {\n  struct Payment {\n    uint amount;\n    uint timestamp;\n  }\n  struct Balance {\n    uint totalBalance;\n    uint numPayments;\n    mapping(uint => Payment) payments;\n  }\n  mapping(address => Balance) public balanceReceived;\n\n  function receiveMoney() public payable {\n    balanceReceived[msg.sender].totalBalance += msg.value;\n    Payment memory payment = Payment(msg.value, block.timestamp);\n\n    balanceReceived[msg.sender].payments[balanceReceived[msg.sender].numPayments] = payment;\n    balanceReceived[msg.sender].numPayments++;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/StructDemo.sol": {
				"StructDemo": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceReceived",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numPayments",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "receiveMoney",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StructDemo.sol\":57:617  contract StructDemo {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StructDemo.sol\":57:617  contract StructDemo {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6d26ec18\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd18a42e1\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StructDemo.sol\":303:615  function receiveMoney() public payable {... */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n        /* \"contracts/StructDemo.sol\":248:298  mapping(address => Balance) public balanceReceived */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap3\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StructDemo.sol\":303:615  function receiveMoney() public payable {... */\n    tag_5:\n        /* \"contracts/StructDemo.sol\":392:401  msg.value */\n      callvalue\n        /* \"contracts/StructDemo.sol\":348:363  balanceReceived */\n      0x00\n        /* \"contracts/StructDemo.sol\":348:375  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/StructDemo.sol\":364:374  msg.sender */\n      caller\n        /* \"contracts/StructDemo.sol\":348:375  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StructDemo.sol\":348:388  balanceReceived[msg.sender].totalBalance */\n      0x00\n      add\n      0x00\n        /* \"contracts/StructDemo.sol\":348:401  balanceReceived[msg.sender].totalBalance += msg.value */\n      dup3\n      dup3\n      sload\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StructDemo.sol\":407:429  Payment memory payment */\n      0x00\n        /* \"contracts/StructDemo.sol\":432:467  Payment(msg.value, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/StructDemo.sol\":440:449  msg.value */\n      callvalue\n        /* \"contracts/StructDemo.sol\":432:467  Payment(msg.value, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/StructDemo.sol\":451:466  block.timestamp */\n      timestamp\n        /* \"contracts/StructDemo.sol\":432:467  Payment(msg.value, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/StructDemo.sol\":407:467  Payment memory payment = Payment(msg.value, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/StructDemo.sol\":554:561  payment */\n      dup1\n        /* \"contracts/StructDemo.sol\":474:489  balanceReceived */\n      0x00\n        /* \"contracts/StructDemo.sol\":474:501  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/StructDemo.sol\":490:500  msg.sender */\n      caller\n        /* \"contracts/StructDemo.sol\":474:501  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StructDemo.sol\":474:510  balanceReceived[msg.sender].payments */\n      0x02\n      add\n        /* \"contracts/StructDemo.sol\":474:551  balanceReceived[msg.sender].payments[balanceReceived[msg.sender].numPayments] */\n      0x00\n        /* \"contracts/StructDemo.sol\":511:526  balanceReceived */\n      dup1\n        /* \"contracts/StructDemo.sol\":511:538  balanceReceived[msg.sender] */\n      0x00\n        /* \"contracts/StructDemo.sol\":527:537  msg.sender */\n      caller\n        /* \"contracts/StructDemo.sol\":511:538  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StructDemo.sol\":511:550  balanceReceived[msg.sender].numPayments */\n      0x01\n      add\n      sload\n        /* \"contracts/StructDemo.sol\":474:551  balanceReceived[msg.sender].payments[balanceReceived[msg.sender].numPayments] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StructDemo.sol\":474:561  balanceReceived[msg.sender].payments[balanceReceived[msg.sender].numPayments] = payment */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/StructDemo.sol\":567:582  balanceReceived */\n      0x00\n        /* \"contracts/StructDemo.sol\":567:594  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/StructDemo.sol\":583:593  msg.sender */\n      caller\n        /* \"contracts/StructDemo.sol\":567:594  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StructDemo.sol\":567:606  balanceReceived[msg.sender].numPayments */\n      0x01\n      add\n      0x00\n        /* \"contracts/StructDemo.sol\":567:608  balanceReceived[msg.sender].numPayments++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/StructDemo.sol\":342:615  {... */\n      pop\n        /* \"contracts/StructDemo.sol\":303:615  function receiveMoney() public payable {... */\n      jump\t// out\n        /* \"contracts/StructDemo.sol\":248:298  mapping(address => Balance) public balanceReceived */\n    tag_10:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_19:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_21\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_9:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_24\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":228:347   */\n    tag_24:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_27\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_19\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_28:\n        /* \"#utility.yul\":574:598   */\n      tag_30\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:943   */\n    tag_12:\n        /* \"#utility.yul\":732:736   */\n      0x00\n        /* \"#utility.yul\":770:772   */\n      0x40\n        /* \"#utility.yul\":759:768   */\n      dup3\n        /* \"#utility.yul\":755:773   */\n      add\n        /* \"#utility.yul\":747:773   */\n      swap1\n      pop\n        /* \"#utility.yul\":783:854   */\n      tag_33\n        /* \"#utility.yul\":851:852   */\n      0x00\n        /* \"#utility.yul\":840:849   */\n      dup4\n        /* \"#utility.yul\":836:853   */\n      add\n        /* \"#utility.yul\":827:833   */\n      dup6\n        /* \"#utility.yul\":783:854   */\n      tag_28\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":864:936   */\n      tag_34\n        /* \"#utility.yul\":932:934   */\n      0x20\n        /* \"#utility.yul\":921:930   */\n      dup4\n        /* \"#utility.yul\":917:935   */\n      add\n        /* \"#utility.yul\":908:914   */\n      dup5\n        /* \"#utility.yul\":864:936   */\n      tag_28\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":611:943   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1335   */\n    tag_15:\n        /* \"#utility.yul\":1070:1073   */\n      0x00\n        /* \"#utility.yul\":1089:1109   */\n      tag_38\n        /* \"#utility.yul\":1107:1108   */\n      dup3\n        /* \"#utility.yul\":1089:1109   */\n      tag_31\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1084:1109   */\n      swap2\n      pop\n        /* \"#utility.yul\":1123:1143   */\n      tag_39\n        /* \"#utility.yul\":1141:1142   */\n      dup4\n        /* \"#utility.yul\":1123:1143   */\n      tag_31\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1118:1143   */\n      swap3\n      pop\n        /* \"#utility.yul\":1277:1278   */\n      dup3\n        /* \"#utility.yul\":1209:1275   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1205:1279   */\n      sub\n        /* \"#utility.yul\":1202:1203   */\n      dup3\n        /* \"#utility.yul\":1199:1280   */\n      gt\n        /* \"#utility.yul\":1196:1303   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":1283:1301   */\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1196:1303   */\n    tag_40:\n        /* \"#utility.yul\":1327:1328   */\n      dup3\n        /* \"#utility.yul\":1324:1325   */\n      dup3\n        /* \"#utility.yul\":1320:1329   */\n      add\n        /* \"#utility.yul\":1313:1329   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1335   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1341:1437   */\n    tag_43:\n        /* \"#utility.yul\":1378:1385   */\n      0x00\n        /* \"#utility.yul\":1407:1431   */\n      tag_45\n        /* \"#utility.yul\":1425:1430   */\n      dup3\n        /* \"#utility.yul\":1407:1431   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1396:1431   */\n      swap1\n      pop\n        /* \"#utility.yul\":1341:1437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1443:1569   */\n    tag_46:\n        /* \"#utility.yul\":1480:1487   */\n      0x00\n        /* \"#utility.yul\":1520:1562   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1513:1518   */\n      dup3\n        /* \"#utility.yul\":1509:1563   */\n      and\n        /* \"#utility.yul\":1498:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1443:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1652   */\n    tag_31:\n        /* \"#utility.yul\":1612:1619   */\n      0x00\n        /* \"#utility.yul\":1641:1646   */\n      dup2\n        /* \"#utility.yul\":1630:1646   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1658:1891   */\n    tag_17:\n        /* \"#utility.yul\":1697:1700   */\n      0x00\n        /* \"#utility.yul\":1720:1744   */\n      tag_50\n        /* \"#utility.yul\":1738:1743   */\n      dup3\n        /* \"#utility.yul\":1720:1744   */\n      tag_31\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1711:1744   */\n      swap2\n      pop\n        /* \"#utility.yul\":1766:1832   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1759:1764   */\n      dup3\n        /* \"#utility.yul\":1756:1833   */\n      eq\n        /* \"#utility.yul\":1753:1856   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":1836:1854   */\n      tag_52\n      tag_42\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1753:1856   */\n    tag_51:\n        /* \"#utility.yul\":1883:1884   */\n      0x01\n        /* \"#utility.yul\":1876:1881   */\n      dup3\n        /* \"#utility.yul\":1872:1885   */\n      add\n        /* \"#utility.yul\":1865:1885   */\n      swap1\n      pop\n        /* \"#utility.yul\":1658:1891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1897:2077   */\n    tag_42:\n        /* \"#utility.yul\":1945:2022   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1942:1943   */\n      0x00\n        /* \"#utility.yul\":1935:2023   */\n      mstore\n        /* \"#utility.yul\":2042:2046   */\n      0x11\n        /* \"#utility.yul\":2039:2040   */\n      0x04\n        /* \"#utility.yul\":2032:2047   */\n      mstore\n        /* \"#utility.yul\":2066:2070   */\n      0x24\n        /* \"#utility.yul\":2063:2064   */\n      0x00\n        /* \"#utility.yul\":2056:2071   */\n      revert\n        /* \"#utility.yul\":2206:2323   */\n    tag_26:\n        /* \"#utility.yul\":2315:2316   */\n      0x00\n        /* \"#utility.yul\":2312:2313   */\n      dup1\n        /* \"#utility.yul\":2305:2317   */\n      revert\n        /* \"#utility.yul\":2329:2451   */\n    tag_22:\n        /* \"#utility.yul\":2402:2426   */\n      tag_58\n        /* \"#utility.yul\":2420:2425   */\n      dup2\n        /* \"#utility.yul\":2402:2426   */\n      tag_43\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2395:2400   */\n      dup2\n        /* \"#utility.yul\":2392:2427   */\n      eq\n        /* \"#utility.yul\":2382:2445   */\n      tag_59\n      jumpi\n        /* \"#utility.yul\":2441:2442   */\n      0x00\n        /* \"#utility.yul\":2438:2439   */\n      dup1\n        /* \"#utility.yul\":2431:2443   */\n      revert\n        /* \"#utility.yul\":2382:2445   */\n    tag_59:\n        /* \"#utility.yul\":2329:2451   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206fbb82dc2848ef8489a6a36a1a236311677c9f543abd536cec35c406c2f02c8864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103e6806100206000396000f3fe6080604052600436106100295760003560e01c80636d26ec181461002e578063d18a42e114610038575b600080fd5b610036610076565b005b34801561004457600080fd5b5061005f600480360381019061005a9190610225565b6101ec565b60405161006d929190610261565b60405180910390f35b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546100c7919061028a565b9250508190555060006040518060400160405280348152602001428152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154815260200190815260200160002060008201518160000155602082015181600101559050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906101e49061031c565b919050555050565b60006020528060005260406000206000915090508060000154908060010154905082565b60008135905061021f81610399565b92915050565b60006020828403121561023b5761023a610394565b5b600061024984828501610210565b91505092915050565b61025b81610312565b82525050565b60006040820190506102766000830185610252565b6102836020830184610252565b9392505050565b600061029582610312565b91506102a083610312565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102d5576102d4610365565b5b828201905092915050565b60006102eb826102f2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061032782610312565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561035a57610359610365565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6103a2816102e0565b81146103ad57600080fd5b5056fea26469706673582212206fbb82dc2848ef8489a6a36a1a236311677c9f543abd536cec35c406c2f02c8864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xD18A42E1 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x225 JUMP JUMPDEST PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP3 SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x28A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1E4 SWAP1 PUSH2 0x31C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21F DUP2 PUSH2 0x399 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B JUMPI PUSH2 0x23A PUSH2 0x394 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x249 DUP5 DUP3 DUP6 ADD PUSH2 0x210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25B DUP2 PUSH2 0x312 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x276 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x252 JUMP JUMPDEST PUSH2 0x283 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x252 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295 DUP3 PUSH2 0x312 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A0 DUP4 PUSH2 0x312 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2D5 JUMPI PUSH2 0x2D4 PUSH2 0x365 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EB DUP3 PUSH2 0x2F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x327 DUP3 PUSH2 0x312 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x35A JUMPI PUSH2 0x359 PUSH2 0x365 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A2 DUP2 PUSH2 0x2E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xBB82DC2848EF8489A6A36A1A23631167 PUSH29 0x9F543ABD536CEC35C406C2F02C8864736F6C6343000807003300000000 ",
							"sourceMap": "57:560:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@balanceReceived_21": {
									"entryPoint": 492,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@receiveMoney_65": {
									"entryPoint": 118,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2454:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:1",
														"type": ""
													}
												],
												"src": "487:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "737:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "747:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "759:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "770:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "755:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "747:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "827:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "840:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "851:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "836:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "836:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "783:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "783:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "783:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "908:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "921:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "932:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "917:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "917:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "864:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "864:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "701:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "713:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "721:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "732:4:1",
														"type": ""
													}
												],
												"src": "611:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "989:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "999:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1015:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1009:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1009:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "999:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "982:6:1",
														"type": ""
													}
												],
												"src": "949:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1074:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1084:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1107:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1089:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1089:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1084:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1118:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1141:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1123:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1118:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1281:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1283:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1283:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1283:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1202:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1209:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1277:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1205:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1199:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1199:81:1"
															},
															"nodeType": "YulIf",
															"src": "1196:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1313:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1324:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1327:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1320:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1320:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1313:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1061:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1064:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1070:3:1",
														"type": ""
													}
												],
												"src": "1030:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1386:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1396:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1425:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1407:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1396:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1368:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1378:7:1",
														"type": ""
													}
												],
												"src": "1341:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1488:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1498:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1513:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1520:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1509:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1509:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1498:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1470:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1480:7:1",
														"type": ""
													}
												],
												"src": "1443:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1620:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1630:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1641:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1630:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1602:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1612:7:1",
														"type": ""
													}
												],
												"src": "1575:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1701:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1711:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1738:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1720:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1711:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1834:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1836:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1836:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1836:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1759:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1756:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:77:1"
															},
															"nodeType": "YulIf",
															"src": "1753:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1865:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1876:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1883:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1872:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1872:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1865:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1687:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1697:3:1",
														"type": ""
													}
												],
												"src": "1658:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1925:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1942:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1935:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1935:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2039:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2042:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2063:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2066:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2056:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1897:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2172:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2189:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2192:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2182:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2083:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2295:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2312:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2315:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2305:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2305:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2206:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2372:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2429:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2438:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2441:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2431:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2431:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2431:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2395:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2420:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2402:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2402:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2392:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2392:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2385:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:43:1"
															},
															"nodeType": "YulIf",
															"src": "2382:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2365:5:1",
														"type": ""
													}
												],
												"src": "2329:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80636d26ec181461002e578063d18a42e114610038575b600080fd5b610036610076565b005b34801561004457600080fd5b5061005f600480360381019061005a9190610225565b6101ec565b60405161006d929190610261565b60405180910390f35b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546100c7919061028a565b9250508190555060006040518060400160405280348152602001428152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154815260200190815260200160002060008201518160000155602082015181600101559050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906101e49061031c565b919050555050565b60006020528060005260406000206000915090508060000154908060010154905082565b60008135905061021f81610399565b92915050565b60006020828403121561023b5761023a610394565b5b600061024984828501610210565b91505092915050565b61025b81610312565b82525050565b60006040820190506102766000830185610252565b6102836020830184610252565b9392505050565b600061029582610312565b91506102a083610312565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102d5576102d4610365565b5b828201905092915050565b60006102eb826102f2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061032782610312565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561035a57610359610365565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6103a2816102e0565b81146103ad57600080fd5b5056fea26469706673582212206fbb82dc2848ef8489a6a36a1a236311677c9f543abd536cec35c406c2f02c8864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xD18A42E1 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x225 JUMP JUMPDEST PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP3 SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x28A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1E4 SWAP1 PUSH2 0x31C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21F DUP2 PUSH2 0x399 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B JUMPI PUSH2 0x23A PUSH2 0x394 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x249 DUP5 DUP3 DUP6 ADD PUSH2 0x210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25B DUP2 PUSH2 0x312 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x276 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x252 JUMP JUMPDEST PUSH2 0x283 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x252 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295 DUP3 PUSH2 0x312 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A0 DUP4 PUSH2 0x312 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2D5 JUMPI PUSH2 0x2D4 PUSH2 0x365 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EB DUP3 PUSH2 0x2F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x327 DUP3 PUSH2 0x312 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x35A JUMPI PUSH2 0x359 PUSH2 0x365 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A2 DUP2 PUSH2 0x2E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xBB82DC2848EF8489A6A36A1A23631167 PUSH29 0x9F543ABD536CEC35C406C2F02C8864736F6C6343000807003300000000 ",
							"sourceMap": "57:560:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;303:312;;;:::i;:::-;;248:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;303:312;392:9;348:15;:27;364:10;348:27;;;;;;;;;;;;;;;:40;;;:53;;;;;;;:::i;:::-;;;;;;;;407:22;432:35;;;;;;;;440:9;432:35;;;;451:15;432:35;;;407:60;;554:7;474:15;:27;490:10;474:27;;;;;;;;;;;;;;;:36;;:77;511:15;:27;527:10;511:27;;;;;;;;;;;;;;;:39;;;474:77;;;;;;;;;;;:87;;;;;;;;;;;;;;;;;;;567:15;:27;583:10;567:27;;;;;;;;;;;;;;;:39;;;:41;;;;;;;;;:::i;:::-;;;;;;342:273;303:312::o;248:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:332::-;732:4;770:2;759:9;755:18;747:26;;783:71;851:1;840:9;836:17;827:6;783:71;:::i;:::-;864:72;932:2;921:9;917:18;908:6;864:72;:::i;:::-;611:332;;;;;:::o;1030:305::-;1070:3;1089:20;1107:1;1089:20;:::i;:::-;1084:25;;1123:20;1141:1;1123:20;:::i;:::-;1118:25;;1277:1;1209:66;1205:74;1202:1;1199:81;1196:107;;;1283:18;;:::i;:::-;1196:107;1327:1;1324;1320:9;1313:16;;1030:305;;;;:::o;1341:96::-;1378:7;1407:24;1425:5;1407:24;:::i;:::-;1396:35;;1341:96;;;:::o;1443:126::-;1480:7;1520:42;1513:5;1509:54;1498:65;;1443:126;;;:::o;1575:77::-;1612:7;1641:5;1630:16;;1575:77;;;:::o;1658:233::-;1697:3;1720:24;1738:5;1720:24;:::i;:::-;1711:33;;1766:66;1759:5;1756:77;1753:103;;;1836:18;;:::i;:::-;1753:103;1883:1;1876:5;1872:13;1865:20;;1658:233;;;:::o;1897:180::-;1945:77;1942:1;1935:88;2042:4;2039:1;2032:15;2066:4;2063:1;2056:15;2206:117;2315:1;2312;2305:12;2329:122;2402:24;2420:5;2402:24;:::i;:::-;2395:5;2392:35;2382:63;;2441:1;2438;2431:12;2382:63;2329:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "199600",
								"executionCost": "245",
								"totalCost": "199845"
							},
							"external": {
								"balanceReceived(address)": "infinite",
								"receiveMoney()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 617,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 617,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 617,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 617,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 617,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 617,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 617,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 617,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 617,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 617,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 617,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 617,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206fbb82dc2848ef8489a6a36a1a236311677c9f543abd536cec35c406c2f02c8864736f6c63430008070033",
									".code": [
										{
											"begin": 57,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 617,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 617,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "6D26EC18"
										},
										{
											"begin": 57,
											"end": 617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "D18A42E1"
										},
										{
											"begin": 57,
											"end": 617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 303,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 303,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 303,
											"end": 615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 615,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 303,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 303,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 392,
											"end": 401,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 374,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 348,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 348,
											"end": 375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 348,
											"end": 375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 375,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 348,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 401,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 348,
											"end": 401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 348,
											"end": 401,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 401,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 401,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 407,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 432,
											"end": 467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 432,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 432,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 432,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 432,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 432,
											"end": 467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 432,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 449,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 432,
											"end": 467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 432,
											"end": 467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 432,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 432,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 466,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 432,
											"end": 467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 432,
											"end": 467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 432,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 407,
											"end": 467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 407,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 490,
											"end": 500,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 474,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 474,
											"end": 501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 474,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 474,
											"end": 501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 474,
											"end": 501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 474,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 474,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 474,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 474,
											"end": 510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 537,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 538,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 511,
											"end": 550,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 550,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 474,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 474,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 551,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 474,
											"end": 561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 583,
											"end": 593,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 567,
											"end": 606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 567,
											"end": 608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 608,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 567,
											"end": 608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 567,
											"end": 608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 567,
											"end": 608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 567,
											"end": 608,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 567,
											"end": 608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 567,
											"end": 608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 608,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 567,
											"end": 608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 342,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 615,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 248,
											"end": 298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 248,
											"end": 298,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 611,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 732,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 755,
											"end": 773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 747,
											"end": 773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 747,
											"end": 773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 851,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 836,
											"end": 853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 783,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 783,
											"end": 854,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 854,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 783,
											"end": 854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 864,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 921,
											"end": 930,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 917,
											"end": 935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 908,
											"end": 914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 864,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 864,
											"end": 936,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 864,
											"end": 936,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 864,
											"end": 936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 611,
											"end": 943,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 943,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 611,
											"end": 943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 943,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1030,
											"end": 1335,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1030,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1107,
											"end": 1108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1089,
											"end": 1109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1089,
											"end": 1109,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1089,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1280,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1303,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1283,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1335,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1335,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1341,
											"end": 1437,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1341,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1425,
											"end": 1430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1407,
											"end": 1431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1407,
											"end": 1431,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1407,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1437,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1443,
											"end": 1569,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1443,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1518,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1563,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1569,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1833,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1753,
											"end": 1856,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1856,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1753,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1897,
											"end": 2077,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1897,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1942,
											"end": 1943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 2023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2039,
											"end": 2040,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2206,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2317,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2451,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2329,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2420,
											"end": 2425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2402,
											"end": 2426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2402,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2402,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2400,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2427,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2382,
											"end": 2445,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2439,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2445,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2382,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2451,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceReceived(address)": "d18a42e1",
							"receiveMoney()": "6d26ec18"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numPayments\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveMoney\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StructDemo.sol\":\"StructDemo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StructDemo.sol\":{\"keccak256\":\"0x0ef15b2da3fb6c1fd63e33c040f09640b6c52d66d73947b6ec81a4b5372cd772\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a8b31027eeac69d636b77aaa14b3595e9d70edadabb56a4835bd4df2b921a21\",\"dweb:/ipfs/QmTSCSepAzKr36wUvJarN99u567WKZAFFv4hHEBQVJ1TSf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 21,
								"contract": "contracts/StructDemo.sol:StructDemo",
								"label": "balanceReceived",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Balance)16_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Balance)16_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StructDemo.Balance)",
								"numberOfBytes": "32",
								"value": "t_struct(Balance)16_storage"
							},
							"t_mapping(t_uint256,t_struct(Payment)6_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct StructDemo.Payment)",
								"numberOfBytes": "32",
								"value": "t_struct(Payment)6_storage"
							},
							"t_struct(Balance)16_storage": {
								"encoding": "inplace",
								"label": "struct StructDemo.Balance",
								"members": [
									{
										"astId": 8,
										"contract": "contracts/StructDemo.sol:StructDemo",
										"label": "totalBalance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 10,
										"contract": "contracts/StructDemo.sol:StructDemo",
										"label": "numPayments",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 15,
										"contract": "contracts/StructDemo.sol:StructDemo",
										"label": "payments",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_uint256,t_struct(Payment)6_storage)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Payment)6_storage": {
								"encoding": "inplace",
								"label": "struct StructDemo.Payment",
								"members": [
									{
										"astId": 3,
										"contract": "contracts/StructDemo.sol:StructDemo",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "contracts/StructDemo.sol:StructDemo",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/StructDemo.sol": {
				"ast": {
					"absolutePath": "contracts/StructDemo.sol",
					"exportedSymbols": {
						"StructDemo": [
							66
						]
					},
					"id": 67,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "StructDemo",
							"nameLocation": "66:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StructDemo.Payment",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "107:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "102:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "102:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "124:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "119:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "119:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Payment",
									"nameLocation": "88:7:0",
									"nodeType": "StructDefinition",
									"scope": 66,
									"src": "81:57:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StructDemo.Balance",
									"id": 16,
									"members": [
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "totalBalance",
											"nameLocation": "167:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "162:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 7,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "162:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "numPayments",
											"nameLocation": "190:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "185:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "185:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "payments",
											"nameLocation": "232:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "207:33:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Payment_$6_storage_$",
												"typeString": "mapping(uint256 => struct StructDemo.Payment)"
											},
											"typeName": {
												"id": 14,
												"keyType": {
													"id": 11,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "215:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "207:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Payment_$6_storage_$",
													"typeString": "mapping(uint256 => struct StructDemo.Payment)"
												},
												"valueType": {
													"id": 13,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 12,
														"name": "Payment",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "223:7:0"
													},
													"referencedDeclaration": 6,
													"src": "223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Payment_$6_storage_ptr",
														"typeString": "struct StructDemo.Payment"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Balance",
									"nameLocation": "148:7:0",
									"nodeType": "StructDefinition",
									"scope": 66,
									"src": "141:104:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d18a42e1",
									"id": 21,
									"mutability": "mutable",
									"name": "balanceReceived",
									"nameLocation": "283:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 66,
									"src": "248:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$16_storage_$",
										"typeString": "mapping(address => struct StructDemo.Balance)"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 17,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "256:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "248:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$16_storage_$",
											"typeString": "mapping(address => struct StructDemo.Balance)"
										},
										"valueType": {
											"id": 19,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 18,
												"name": "Balance",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 16,
												"src": "267:7:0"
											},
											"referencedDeclaration": 16,
											"src": "267:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Balance_$16_storage_ptr",
												"typeString": "struct StructDemo.Balance"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "342:273:0",
										"statements": [
											{
												"expression": {
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 24,
																"name": "balanceReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "348:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$16_storage_$",
																	"typeString": "mapping(address => struct StructDemo.Balance storage ref)"
																}
															},
															"id": 27,
															"indexExpression": {
																"expression": {
																	"id": 25,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "364:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "364:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "348:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$16_storage",
																"typeString": "struct StructDemo.Balance storage ref"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "348:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 29,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "392:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "392:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "348:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "348:53:0"
											},
											{
												"assignments": [
													35
												],
												"declarations": [
													{
														"constant": false,
														"id": 35,
														"mutability": "mutable",
														"name": "payment",
														"nameLocation": "422:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 64,
														"src": "407:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$6_memory_ptr",
															"typeString": "struct StructDemo.Payment"
														},
														"typeName": {
															"id": 34,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 33,
																"name": "Payment",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "407:7:0"
															},
															"referencedDeclaration": 6,
															"src": "407:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Payment_$6_storage_ptr",
																"typeString": "struct StructDemo.Payment"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 42,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 37,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "440:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "440:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 39,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "451:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "451:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 36,
														"name": "Payment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "432:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Payment_$6_storage_ptr_$",
															"typeString": "type(struct StructDemo.Payment storage pointer)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "432:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Payment_$6_memory_ptr",
														"typeString": "struct StructDemo.Payment memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "407:60:0"
											},
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 43,
																	"name": "balanceReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "474:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$16_storage_$",
																		"typeString": "mapping(address => struct StructDemo.Balance storage ref)"
																	}
																},
																"id": 46,
																"indexExpression": {
																	"expression": {
																		"id": 44,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "490:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 45,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "490:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "474:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balance_$16_storage",
																	"typeString": "struct StructDemo.Balance storage ref"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "payments",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "474:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Payment_$6_storage_$",
																"typeString": "mapping(uint256 => struct StructDemo.Payment storage ref)"
															}
														},
														"id": 53,
														"indexExpression": {
															"expression": {
																"baseExpression": {
																	"id": 48,
																	"name": "balanceReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "511:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$16_storage_$",
																		"typeString": "mapping(address => struct StructDemo.Balance storage ref)"
																	}
																},
																"id": 51,
																"indexExpression": {
																	"expression": {
																		"id": 49,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "527:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "527:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "511:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balance_$16_storage",
																	"typeString": "struct StructDemo.Balance storage ref"
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numPayments",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "511:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "474:77:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$6_storage",
															"typeString": "struct StructDemo.Payment storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "payment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "554:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$6_memory_ptr",
															"typeString": "struct StructDemo.Payment memory"
														}
													},
													"src": "474:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Payment_$6_storage",
														"typeString": "struct StructDemo.Payment storage ref"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "474:87:0"
											},
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "567:41:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 57,
																"name": "balanceReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "567:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$16_storage_$",
																	"typeString": "mapping(address => struct StructDemo.Balance storage ref)"
																}
															},
															"id": 60,
															"indexExpression": {
																"expression": {
																	"id": 58,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "583:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "583:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "567:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$16_storage",
																"typeString": "struct StructDemo.Balance storage ref"
															}
														},
														"id": 61,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "numPayments",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "567:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "567:41:0"
											}
										]
									},
									"functionSelector": "6d26ec18",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveMoney",
									"nameLocation": "312:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "324:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:0:0"
									},
									"scope": 66,
									"src": "303:312:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 67,
							"src": "57:560:0",
							"usedErrors": []
						}
					],
					"src": "32:585:0"
				},
				"id": 0
			}
		}
	}
}